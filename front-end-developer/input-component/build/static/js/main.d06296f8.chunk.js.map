{"version":3,"sources":["components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["colors","StyledLabel","styled","label","attrs","props","htmlFor","StyledInput","input","id","placeholder","disabled","fullWidth","size","paddingLeft","paddingRight","error","StyledTextarea","textarea","rows","row","StyledHelperText","span","EndIcon","className","StartIcon","IconContainer","div","Container","Input","min","max","children","value","helperText","startIcon","endIcon","multiLine","Math","ceil","floor","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06296f8.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n/* Colors */\nconst colors = {\n  primary: \"#333333\",\n  seconday: \"#2962FF\",\n  error: \"#D32F2F\",\n  gray: \"#828282\",\n};\n\nconst StyledLabel = styled.label.attrs((props) => ({\n  htmlFor: props.htmlFor,\n  \"data-testid\": \"label\",\n}))`\n  font-size: 12px;\n  display: block;\n  margin-bottom: 4px;\n`;\n\nconst StyledInput = styled.input.attrs((props) => ({\n  id: props.id,\n  placeholder: \"Placeholder\",\n  disabled: props.disabled,\n}))`\n  min-width: 250px;\n  width: ${(props) => (props.fullWidth ? \"100%\" : \"fit-content\")};\n  box-sizing: border-box;\n  padding: ${(props) => (props.size === \"sm\" ? \"10px 12px\" : \"18px 12px\")};\n  padding-left: ${(props) => (props.paddingLeft ? \"38px\" : \"12px\")};\n  padding-right: ${(props) => (props.paddingRight ? \"38px\" : \"12px\")};\n  border: 1px solid;\n  border-radius: 8px;\n  font-size: 14px;\n  outline: none;\n  &:focus {\n    border-color: ${(props) => (props.error ? colors.error : colors.seconday)};\n  }\n`;\n\nconst StyledTextarea = styled.textarea.attrs((props) => ({\n  id: props.id,\n  rows: props.row,\n  placeholder: \"Placeholder\",\n  disabled: props.disabled,\n}))`\n  min-width: 250px;\n  width: ${(props) => (props.fullWidth ? \"100%\" : \"fit-content\")};\n  box-sizing: border-box;\n  padding: ${(props) => (props.size === \"sm\" ? \"10px 12px\" : \"18px 12px\")};\n  padding-left: ${(props) => (props.paddingLeft ? \"38px\" : \"12px\")};\n  padding-right: ${(props) => (props.paddingRight ? \"38px\" : \"12px\")};\n  border: 1px solid;\n  border-radius: 8px;\n  font-size: 14px;\n  outline: none;\n  &:focus {\n    border-color: ${(props) => (props.error ? colors.error : colors.seconday)};\n  }\n`;\n\nconst StyledHelperText = styled.span`\n  display: block;\n  margin-top: 4px;\n  font-size: 12px;\n`;\n\nconst EndIcon = styled.span.attrs({\n  className: \"material-icons\",\n})`\n  font-size: 18px;\n  color: ${colors.gray};\n  position: absolute;\n  top: 18px;\n  right: 12px;\n`;\n\nconst StartIcon = styled.span.attrs({\n  className: \"material-icons\",\n})`\n  font-size: 18px;\n  color: ${colors.gray};\n  position: absolute;\n  top: 18px;\n  left: 12px;\n`;\n\nconst IconContainer = styled.div`\n  position: relative;\n`;\n\nconst Container = styled.div`\n  margin: 30px;\n  display: border-box;\n  width: ${(props) => (props.fullWidth ? \"auto\" : \"fit-content\")};\n  text-align: left;\n  color: ${(props) => (props.error ? colors.error : colors.primary)};\n  & input {\n    border-color: ${(props) => (props.error ? colors.error : colors.gray)};\n  }\n  &:hover {\n    color: ${colors.primary};\n    & input {\n      border-color: ${colors.primary};\n    }\n  }\n  & input:focus {\n    color: ${(props) => (props.error ? colors.error : colors.seconday)};\n    border-color: ${(props) => (props.error ? colors.error : colors.seconday)};\n  }\n`;\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nconst Input = (props) => {\n  const {\n    children,\n    value,\n    size,\n    error,\n    disabled,\n    helperText,\n    startIcon,\n    endIcon,\n    fullWidth,\n    multiLine,\n    row,\n  } = props;\n  const id = getRandomInt(10000000, 99999999);\n  return (\n    <Container error={error} fullWidth={fullWidth}>\n      <StyledLabel error={error} htmlFor={id}>\n        {children}\n      </StyledLabel>\n      <IconContainer>\n        {multiLine ? (\n          <StyledTextarea\n            paddingLeft={startIcon}\n            paddingRight={endIcon}\n            error={error}\n            disabled={disabled}\n            id={id}\n            value={value}\n            size={size}\n            fullWidth={fullWidth}\n            row={row}\n          />\n        ) : (\n          <StyledInput\n            paddingLeft={startIcon}\n            paddingRight={endIcon}\n            error={error}\n            disabled={disabled}\n            id={id}\n            value={value}\n            size={size}\n            fullWidth={fullWidth}\n          />\n        )}\n        {startIcon ? <StartIcon>{startIcon}</StartIcon> : null}\n        {endIcon ? <EndIcon>{endIcon}</EndIcon> : null}\n      </IconContainer>\n      {helperText ? (\n        <StyledHelperText error={error}>{helperText}</StyledHelperText>\n      ) : null}\n    </Container>\n  );\n};\n\nexport default Input;\n","import Input from \"./components/Input\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <main>\n      <div className=\"container\">\n        <Input>{\"<Input />\"}</Input>\n        <Input error>{\"<Input error />\"}</Input>\n        <Input disabled>{\"<Input disabled />\"}</Input>\n        <Input helperText=\"Some interesting text\">\n          {\"<Input helperText='Some interesting text' />\"}\n        </Input>\n\n        <Input error helperText=\"Some interesting text\">\n          {\"<Input error helperText='Some interesting text' />\"}\n        </Input>\n        <Input startIcon=\"face\">{\"<Input startIcon='face' />\"}</Input>\n        <Input error startIcon=\"add_task\">\n          {\"<Input error startIcon='add_task' />\"}\n        </Input>\n        <Input endIcon=\"circle_notifications\">\n          {\"<Input endIcon='circle_notifications' />\"}\n        </Input>\n        <Input value=\"Text\">{\"<Input value='Text' />\"}</Input>\n        <Input size=\"sm\">{\"<Input size='sm' />\"}</Input>\n        <Input size=\"md\">{\"<Input size='md' />\"}</Input>\n      </div>\n      <Input fullWidth>{\"<Input fullWidth />\"}</Input>\n      <Input multiLine row=\"4\">\n        {\"<Input multiLine row='4' />\"}\n      </Input>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}